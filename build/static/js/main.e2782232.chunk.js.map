{"version":3,"sources":["components/InfoCard.jsx","components/Column.jsx","pages/BoardPage.jsx","index.js"],"names":["InfoCard","this","props","title","description","id","className","style","paddingLeft","paddingTop","marginBottom","paddingBottom","fontWeight","marginTop","Component","defaultProps","Column","state","newData","callback","toLowerCase","replace","UIkit","util","on","event","groupID","detail","target","nodes","childNodes","newList","forEach","d","push","data","uk-sortable","length","map","i","key","BoardPage","handleDataChange","dataSource","newRecord","Object","keys","includes","find","filter","console","log","record","setState","axios","post","then","res","statusText","bind","fetch","response","json","result","uk-grid","category","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.e2782232.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\n\nimport \"../../node_modules/uikit/src/less/uikit.theme.less\";\n\n/**\n * An InfoCard component\n */\nclass InfoCard extends Component {\n  /**\n   * Renders a InfoCard component\n   * @returns {JSX} returns React element\n   */\n  render() {\n    const { title, description, id } = this.props;\n\n    return (\n      <div className=\"uk-card uk-card-default infocard\" id={id}>\n        <h5\n          style={{\n            paddingLeft: 10,\n            paddingTop: 6,\n            marginBottom: 0,\n            paddingBottom: 6,\n            fontWeight: \"bold\",\n          }}\n        >\n          {title}\n        </h5>\n        <hr style={{ marginTop: 0, marginBottom: 0 }} />\n        <p\n          style={{\n            marginTop: 0,\n            paddingTop: 6,\n            paddingLeft: 10,\n            paddingBottom: 6,\n          }}\n        >\n          {description}\n        </p>\n      </div>\n    );\n  }\n}\n\nInfoCard.defaultProps = {\n  description: \"Hello World!\",\n  title: \"Title\",\n  id: \"infocard\",\n};\n\nInfoCard.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  id: PropTypes.string,\n};\n\nexport default InfoCard;\n","import PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport UIkit from \"uikit\";\n\nimport InfoCard from \"./InfoCard\";\n\nimport \"../../node_modules/uikit/src/less/uikit.theme.less\";\n\n/**\n * An Column component\n */\nclass Column extends Component {\n  /**\n   * Initialize the React element\n   * @param {props} props React element properties\n   */\n  constructor(props) {\n    super(props);\n    this.state = { newData: {} };\n  }\n  /**\n   * @summary Support actions for when the Alphabet Component is first mounted\n   * @returns {none} returns nothing\n   */\n  componentDidMount() {\n    // this.setState({ newData: data });\n    const { callback, title } = this.props;\n    const id = title.toLowerCase().replace(/\\s/g, \"\");\n    UIkit.util.on(`#${id}`, \"added\", function (event) {\n      // when card been added into a group\n      const groupID = event.detail[0].target.id;\n      const nodes = event.detail[0].target.childNodes;\n      const newList = [];\n      nodes.forEach((d) => {\n        newList.push(d.id);\n      });\n      callback(newList, groupID);\n      // console.log(\"456 event\", groupID, newList, data);\n    });\n\n    UIkit.util.on(`#${id}`, \"stop\", function (event) {\n      // when card order changed inside a group or removed from a group\n      const groupID = event.detail[0].target.id;\n      const nodes = event.detail[0].target.childNodes;\n      const newList = [];\n      nodes.forEach((d) => {\n        newList.push(d.id);\n      });\n      callback(newList, groupID);\n      // console.log(\"123 event\", newList);\n    });\n  }\n\n  /**\n   * Renders a Column component\n   * @returns {JSX} returns React element\n   */\n  render() {\n    const { data, title } = this.props;\n\n    return (\n      <div className=\"column\">\n        <div className=\"uk-section uk-section-muted\">\n          <h4 className=\"uk-text-center\">{title}</h4>\n          <div\n            className=\"sortable\"\n            uk-sortable=\"group: sortable-group\"\n            id={title.toLowerCase().replace(/\\s/g, \"\")}\n          >\n            {data && data.length > 0\n              ? data.map((d, i) => {\n                  return (\n                    <InfoCard\n                      title={d.title}\n                      description={d.description}\n                      key={d.title.toLowerCase()}\n                      id={d.id} //`${title.toLowerCase().replace(/\\s/g, \"\")}-${i}`\n                    />\n                  );\n                })\n              : \"\"}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nColumn.defaultProps = {\n  data: [\n    { title: \"Date Aug 01\", description: \"Today is sunny\" },\n    { title: \"Date Aug 02\", description: \"Today is cloudy\" },\n  ],\n  title: \"Column - 1\",\n  callback: () => {},\n};\n\nColumn.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string,\n  callback: PropTypes.func,\n};\n\nexport default Column;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport Column from \"../components/Column\";\n\nimport \"../../node_modules/uikit/src/less/uikit.theme.less\";\n\n/**\n * A Board Page component\n */\nclass BoardPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { dataSource: {}, newData: {} };\n    this.handleDataChange = this.handleDataChange.bind(this);\n  }\n\n  /**\n   * @summary Handle the data change when card moved\n   * @param {array} newList list of card ids in the current group\n   * @param {string} groupID id of the current group\n   * @returns {none} null\n   */\n  handleDataChange = (newList, groupID) => {\n    const { dataSource, newData } = this.state;\n    const newRecord = [];\n\n    newList.forEach((id, i) => {\n      Object.keys(dataSource.data).forEach((key) => {\n        if (id.includes(key)) {\n          const find = dataSource.data[key].filter((d) => d.id === id);\n          newRecord.push(find[0]);\n        }\n      });\n    });\n    console.log(newList, newRecord);\n    newRecord.forEach((record, i) => {\n      record.id = `${groupID}-${i}`;\n    });\n\n    this.setState(\n      {\n        newData: {\n          ...newData,\n          data: { ...newData.data, [groupID]: newRecord },\n        },\n      },\n      () => {\n        axios\n          .post(\"http://localhost:8000/update\", this.state.newData)\n          .then((res) => {\n            // response status\n            console.log(res.statusText);\n          });\n      }\n    );\n  };\n\n  /**\n   * @summary Fetch sample data when Component is first mounted\n   * @returns {none} returns nothing\n   */\n  componentDidMount() {\n    fetch(\"http://localhost:8000/posts\")\n      .then((response) => response.json())\n      .then((result) => this.setState({ dataSource: result, newData: result }));\n  }\n\n  /**\n   * Renders a board page component\n   * @returns {JSX} returns React element\n   */\n  render() {\n    const { dataSource } = this.state;\n    // console.log(newData);\n    return (\n      <div className=\"boardpage\">\n        <div\n          className=\"boardpage-content uk-grid-small uk-child-width-1-2@s uk-child-width-1-4@m\"\n          uk-grid=\"\"\n        >\n          {dataSource.category && dataSource.category.length > 0\n            ? dataSource.category.map((d) => {\n                return (\n                  <Column\n                    data={dataSource.data[d.toLowerCase().replace(/\\s/g, \"\")]}\n                    title={d}\n                    key={d.toLowerCase().replace(/\\s/g, \"\")}\n                    callback={this.handleDataChange}\n                  />\n                );\n              })\n            : \"\"}\n        </div>\n      </div>\n    );\n  }\n}\nexport default BoardPage;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport BoardPage from \"./pages/BoardPage\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<BoardPage />, rootElement);\n"],"sourceRoot":""}